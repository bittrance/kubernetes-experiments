apiVersion: v1
kind: Namespace
metadata:
  name: hello-test
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: hello-test
  namespace: hello-test
spec:
  gatewayClassName: cilium
  listeners:
    - name: http
      protocol: HTTP
      port: 80
    - name: https
      protocol: HTTPS
      port: 443
      tls:
        mode: Terminate
        certificateRefs:
        - kind: Secret
          group: ""
          name: hello-test-certificate
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: hello-test
  namespace: hello-test
spec:
  secretName: hello-test-certificate
  isCA: false
  usages:
    - server auth
  dnsNames:
    - cilium-gateway-hello-test.hello-test.test
  issuerRef:
    name: ca-issuer
    kind: ClusterIssuer
    group: cert-manager.io
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: hello-redirect
  namespace: hello-test
spec:
  parentRefs:
    - name: hello-test
      port: 80
      sectionName: http
  rules:
    - filters:
      - type: RequestRedirect
        requestRedirect:
          scheme: https
          statusCode: 301
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: hello-test
  namespace: hello-test
spec:
  parentRefs:
    - name: hello-test
      port: 443
      sectionName: https
  rules:
    - backendRefs:
        - name: hello-test
          port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: hello-test
  namespace: hello-test
spec:
  selector:
    app: hello-test
  ports:
    - name: http
      port: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-test
  namespace: hello-test
  labels:
    app: hello-test
spec:
  selector:
    matchLabels:
      app: hello-test
  template:
    metadata:
      labels:
        app: hello-test
    spec:
      containers:
        - name: caddy
          image: caddy:2.9.1-alpine
          command:
            - caddy
            - respond
            - --listen
            - :8080
            - --body
            - Hello backend!
            - --access-log
          ports:
            - containerPort: 8080

