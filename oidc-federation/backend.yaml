apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  type: LoadBalancer
  selector:
    app: backend
  ports:
    - name: http
      port: 80
      targetPort: 8080
    - name: https
      port: 443
      targetPort: 4433
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: oauth2-proxy
          image: quay.io/oauth2-proxy/oauth2-proxy:v7.8.2
          args:
            - --http-address=0.0.0.0:8080
            - --https-address=0.0.0.0:4433
          envFrom:
            - configMapRef:
                name: oauth2-proxy
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 4433
          lifecycle:
            preStop:
              sleep:
                seconds: 2
          # startupProbe:
          #   failureThreshold: 10
          #   httpGet:
          #     path: /ready
          #     port: 8080
          #   periodSeconds: 1
          #   successThreshold: 1
          #   timeoutSeconds: 1
          # readinessProbe:
          #   failureThreshold: 2
          #   httpGet:
          #     path: /ready
          #     port: 8080
          #   periodSeconds: 1
          #   successThreshold: 1
          #   timeoutSeconds: 1
          volumeMounts:
            - name: certificates
              readOnly: true
              mountPath: /certs
      initContainers:
        - name: caddy
          restartPolicy: Always
          image: caddy:2.9.1-alpine
          command:
            - caddy
            - run
            - --config=/config/Caddyfile
          ports:
            - containerPort: 8081
          volumeMounts:
            - name: caddy-config
              readOnly: true
              mountPath: /config
      volumes:
        - name: certificates
          secret:
            secretName: backend-certificate
        - name: caddy-config
          configMap:
            name: caddy-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: oauth2-proxy
data:
  OAUTH2_PROXY_TLS_KEY_FILE: /certs/tls.key
  OAUTH2_PROXY_TLS_CERT_FILE: /certs/tls.crt
  OAUTH2_PROXY_UPSTREAMS: http://localhost:8081/
  OAUTH2_PROXY_OIDC_ISSUER_URL: https://dex.oidc-federation.test
  OAUTH2_PROXY_SSL_INSECURE_SKIP_VERIFY: 'true'
  OAUTH2_PROXY_PROVIDER: oidc
  OAUTH2_PROXY_CLIENT_ID: af09c06d-366c-4d22-85df-8f4942bd1d1d
  OAUTH2_PROXY_CLIENT_SECRET: FPMn4cDm71QJ7Q1iSrTpVVs2rwkCdpkW
  OAUTH2_PROXY_REDIRECT_URL: https://backend.oidc-federation.test
  OAUTH2_PROXY_CODE_CHALLENGE_METHOD: S256
  OAUTH2_PROXY_COOKIE_SECRET: verrahs3cr3t!!!!
  OAUTH2_PROXY_PASS_ACCESS_TOKEN: 'true'
  OAUTH2_PROXY_PASS_AUTHORIZATION_HEADER: 'true'
  OAUTH2_PROXY_EMAIL_DOMAINS: '*'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: caddy-config
data:
  Caddyfile: |
    {
      servers :8081 {
        log_credentials
      }
    }
    :8081 {
      log default {
        format json
      }
      handle {
        respond "Hello world!"
      }
    }
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: backend-certificate
spec:
  secretName: backend-certificate
  isCA: false
  usages:
    - server auth
  dnsNames:
    - backend.oidc-federation.test
    - backend
  issuerRef:
    name: ca-issuer
    kind: ClusterIssuer
    group: cert-manager.io
---
apiVersion: v1
kind: Secret
metadata:
  name: backend-certificate
type: Opaque
